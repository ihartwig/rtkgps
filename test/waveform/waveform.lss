
waveform.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000844  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00802000  00000844  000008d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c8  00802002  00802002  000008da  2**0
                  ALLOC
  3 .stab         000028c8  00000000  00000000  000008dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000872  00000000  00000000  000031a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003a16  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000b8  00000000  00000000  00003a28  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000018b8  00000000  00000000  00003ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002c8  00000000  00000000  00005398  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000306  00000000  00000000  00005660  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000cc  00000000  00000000  00005968  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000969  00000000  00000000  00005a34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000236  00000000  00000000  0000639d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000028  00000000  00000000  000065d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 65 00 	jmp	0xca	; 0xca <__ctors_end>
   4:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   8:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  10:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  14:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  18:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  1c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  20:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  24:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  28:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  2c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  30:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  34:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  38:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  3c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  40:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  44:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  48:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  4c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  50:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  54:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  58:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  5c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  60:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  64:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  68:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  6c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  70:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  74:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  78:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  7c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  80:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  84:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  88:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  8c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  90:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  94:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  98:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  9c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  a0:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  a4:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  a8:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  ac:	05 a8       	ldd	r0, Z+53	; 0x35
  ae:	4c cd       	rjmp	.-1384   	; 0xfffffb48 <__eeprom_end+0xff7efb48>
  b0:	b2 d4       	rcall	.+2404   	; 0xa16 <__data_load_end+0x1d0>
  b2:	4e b9       	out	0x0e, r20	; 14
  b4:	38 36       	cpi	r19, 0x68	; 104
  b6:	a9 02       	muls	r26, r25
  b8:	0c 50       	subi	r16, 0x0C	; 12
  ba:	b9 91       	ld	r27, Y+
  bc:	86 88       	ldd	r8, Z+22	; 0x16
  be:	08 3c       	cpi	r16, 0xC8	; 200
  c0:	a6 aa       	std	Z+54, r10	; 0x36
  c2:	aa 2a       	or	r10, r26
  c4:	be 00       	.word	0x00be	; ????
  c6:	00 00       	nop
  c8:	80 3f       	cpi	r24, 0xF0	; 240

000000ca <__ctors_end>:
  ca:	11 24       	eor	r1, r1
  cc:	1f be       	out	0x3f, r1	; 63
  ce:	cf ef       	ldi	r28, 0xFF	; 255
  d0:	df e2       	ldi	r29, 0x2F	; 47
  d2:	de bf       	out	0x3e, r29	; 62
  d4:	cd bf       	out	0x3d, r28	; 61

000000d6 <__do_copy_data>:
  d6:	10 e2       	ldi	r17, 0x20	; 32
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b0 e2       	ldi	r27, 0x20	; 32
  dc:	e4 e4       	ldi	r30, 0x44	; 68
  de:	f8 e0       	ldi	r31, 0x08	; 8
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <__do_copy_data+0x10>
  e2:	05 90       	lpm	r0, Z+
  e4:	0d 92       	st	X+, r0
  e6:	a2 30       	cpi	r26, 0x02	; 2
  e8:	b1 07       	cpc	r27, r17
  ea:	d9 f7       	brne	.-10     	; 0xe2 <__do_copy_data+0xc>

000000ec <__do_clear_bss>:
  ec:	10 e2       	ldi	r17, 0x20	; 32
  ee:	a2 e0       	ldi	r26, 0x02	; 2
  f0:	b0 e2       	ldi	r27, 0x20	; 32
  f2:	01 c0       	rjmp	.+2      	; 0xf6 <.do_clear_bss_start>

000000f4 <.do_clear_bss_loop>:
  f4:	1d 92       	st	X+, r1

000000f6 <.do_clear_bss_start>:
  f6:	aa 3c       	cpi	r26, 0xCA	; 202
  f8:	b1 07       	cpc	r27, r17
  fa:	e1 f7       	brne	.-8      	; 0xf4 <.do_clear_bss_loop>
  fc:	0e 94 57 01 	call	0x2ae	; 0x2ae <main>
 100:	0c 94 20 04 	jmp	0x840	; 0x840 <_exit>

00000104 <__bad_interrupt>:
 104:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000108 <LoadSineWave>:
  };
  
};

void LoadSineWave(int len)
{
 108:	8f 92       	push	r8
 10a:	9f 92       	push	r9
 10c:	af 92       	push	r10
 10e:	bf 92       	push	r11
 110:	cf 92       	push	r12
 112:	df 92       	push	r13
 114:	ef 92       	push	r14
 116:	ff 92       	push	r15
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	8c 01       	movw	r16, r24
int i;

  for(i=0;i<len;i++)
 122:	c0 e0       	ldi	r28, 0x00	; 0
 124:	d0 e0       	ldi	r29, 0x00	; 0
  {
    data12[i]=((sin((2.0/(float)len)*(float)i*M_PI)*0.5 + 0.5)*4095);
 126:	6c 01       	movw	r12, r24
 128:	ee 24       	eor	r14, r14
 12a:	d7 fc       	sbrc	r13, 7
 12c:	e0 94       	com	r14
 12e:	fe 2c       	mov	r15, r14

void LoadSineWave(int len)
{
int i;

  for(i=0;i<len;i++)
 130:	c0 17       	cp	r28, r16
 132:	d1 07       	cpc	r29, r17
 134:	0c f0       	brlt	.+2      	; 0x138 <LoadSineWave+0x30>
 136:	40 c0       	rjmp	.+128    	; 0x1b8 <LoadSineWave+0xb0>
  {
    data12[i]=((sin((2.0/(float)len)*(float)i*M_PI)*0.5 + 0.5)*4095);
 138:	c7 01       	movw	r24, r14
 13a:	b6 01       	movw	r22, r12
 13c:	0e 94 8c 02 	call	0x518	; 0x518 <__floatsisf>
 140:	9b 01       	movw	r18, r22
 142:	ac 01       	movw	r20, r24
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	70 e0       	ldi	r23, 0x00	; 0
 148:	80 e0       	ldi	r24, 0x00	; 0
 14a:	90 e4       	ldi	r25, 0x40	; 64
 14c:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__divsf3>
 150:	4b 01       	movw	r8, r22
 152:	5c 01       	movw	r10, r24
 154:	be 01       	movw	r22, r28
 156:	88 27       	eor	r24, r24
 158:	77 fd       	sbrc	r23, 7
 15a:	80 95       	com	r24
 15c:	98 2f       	mov	r25, r24
 15e:	0e 94 8c 02 	call	0x518	; 0x518 <__floatsisf>
 162:	9b 01       	movw	r18, r22
 164:	ac 01       	movw	r20, r24
 166:	c5 01       	movw	r24, r10
 168:	b4 01       	movw	r22, r8
 16a:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3>
 16e:	2b ed       	ldi	r18, 0xDB	; 219
 170:	3f e0       	ldi	r19, 0x0F	; 15
 172:	49 e4       	ldi	r20, 0x49	; 73
 174:	50 e4       	ldi	r21, 0x40	; 64
 176:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3>
 17a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <sin>
 17e:	20 e0       	ldi	r18, 0x00	; 0
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	5f e3       	ldi	r21, 0x3F	; 63
 186:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3>
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	5f e3       	ldi	r21, 0x3F	; 63
 192:	0e 94 8d 01 	call	0x31a	; 0x31a <__addsf3>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 ef       	ldi	r19, 0xF0	; 240
 19a:	4f e7       	ldi	r20, 0x7F	; 127
 19c:	55 e4       	ldi	r21, 0x45	; 69
 19e:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3>
 1a2:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__fixsfsi>
 1a6:	fe 01       	movw	r30, r28
 1a8:	ee 0f       	add	r30, r30
 1aa:	ff 1f       	adc	r31, r31
 1ac:	ee 5f       	subi	r30, 0xFE	; 254
 1ae:	ff 4d       	sbci	r31, 0xDF	; 223
 1b0:	60 83       	st	Z, r22
 1b2:	71 83       	std	Z+1, r23	; 0x01

void LoadSineWave(int len)
{
int i;

  for(i=0;i<len;i++)
 1b4:	21 96       	adiw	r28, 0x01	; 1
 1b6:	bc cf       	rjmp	.-136    	; 0x130 <LoadSineWave+0x28>
  {
    data12[i]=((sin((2.0/(float)len)*(float)i*M_PI)*0.5 + 0.5)*4095);
  };

};
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	0f 91       	pop	r16
 1c0:	ff 90       	pop	r15
 1c2:	ef 90       	pop	r14
 1c4:	df 90       	pop	r13
 1c6:	cf 90       	pop	r12
 1c8:	bf 90       	pop	r11
 1ca:	af 90       	pop	r10
 1cc:	9f 90       	pop	r9
 1ce:	8f 90       	pop	r8
 1d0:	08 95       	ret

000001d2 <GenerateArbWave12>:
// {
//     TCD5.PER = F_CPU/freq/gWaveNumSamp/4;
// };

void GenerateArbWave12(int *data, int len, unsigned long int freq)
{
 1d2:	cf 92       	push	r12
 1d4:	df 92       	push	r13
 1d6:	ef 92       	push	r14
 1d8:	ff 92       	push	r15
 1da:	0f 93       	push	r16
 1dc:	1f 93       	push	r17
 1de:	cf 93       	push	r28
 1e0:	df 93       	push	r29
 1e2:	8c 01       	movw	r16, r24
 1e4:	d6 2f       	mov	r29, r22
 1e6:	c7 2f       	mov	r28, r23
 1e8:	69 01       	movw	r12, r18
 1ea:	7a 01       	movw	r14, r20

EVSYS.CH1MUX = 0xD0;    // CH1 = TCD5 overflow
 1ec:	80 ed       	ldi	r24, 0xD0	; 208
 1ee:	80 93 81 01 	sts	0x0181, r24
TCD5.CTRLA = 0x03;      // Prescaler: clk/4
 1f2:	83 e0       	ldi	r24, 0x03	; 3
 1f4:	80 93 40 09 	sts	0x0940, r24
TCD5.PER   = F_CPU/(len/2)/freq/4;        // 31=1MHz,63=500K,127=250K
 1f8:	86 2f       	mov	r24, r22
 1fa:	97 2f       	mov	r25, r23
 1fc:	97 fd       	sbrc	r25, 7
 1fe:	01 96       	adiw	r24, 0x01	; 1
 200:	9c 01       	movw	r18, r24
 202:	35 95       	asr	r19
 204:	27 95       	ror	r18
 206:	44 27       	eor	r20, r20
 208:	37 fd       	sbrc	r19, 7
 20a:	40 95       	com	r20
 20c:	54 2f       	mov	r21, r20
 20e:	60 e0       	ldi	r22, 0x00	; 0
 210:	72 e1       	ldi	r23, 0x12	; 18
 212:	8a e7       	ldi	r24, 0x7A	; 122
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__udivmodsi4>
 21a:	ca 01       	movw	r24, r20
 21c:	b9 01       	movw	r22, r18
 21e:	a7 01       	movw	r20, r14
 220:	96 01       	movw	r18, r12
 222:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__udivmodsi4>
 226:	20 93 66 09 	sts	0x0966, r18
 22a:	30 93 67 09 	sts	0x0967, r19
DACA.CTRLA = 0x05;      // Enable DACA and CH0
 22e:	85 e0       	ldi	r24, 0x05	; 5
 230:	80 93 00 03 	sts	0x0300, r24
DACA.CTRLB = 0x01;  // CH0 auto triggered by an event (CH1)
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	80 93 01 03 	sts	0x0301, r24
DACA.CTRLC = 0x08;  // Use AVCC (3.3V), left adjust
 23a:	98 e0       	ldi	r25, 0x08	; 8
 23c:	90 93 02 03 	sts	0x0302, r25
DACA.EVCTRL = 0x01; // Event CH1 triggers the DAC Conversion
 240:	80 93 03 03 	sts	0x0303, r24
DACA.TIMCTRL = 0x50;// Minimum 32 CLK between conversions
 244:	80 e5       	ldi	r24, 0x50	; 80
 246:	80 93 04 03 	sts	0x0304, r24
EDMA.CTRL = 0x80 | EDMA_CHMODE_STD0_gc;    // Enable, single buffer, round robin
 24a:	80 e9       	ldi	r24, 0x90	; 144
 24c:	80 93 00 01 	sts	0x0100, r24
EDMA.CH0.ADDRCTRL = 0xD9;// Reload, Increment source
 250:	89 ed       	ldi	r24, 0xD9	; 217
 252:	80 93 12 01 	sts	0x0112, r24
EDMA.CH0.TRIGSRC= 0x15;  // DACA CH0 is trigger source
 256:	85 e1       	ldi	r24, 0x15	; 21
 258:	80 93 14 01 	sts	0x0114, r24
EDMA.CH0.TRFCNTL = len & 0xFF;   // Buffer is len bytes
 25c:	d0 93 16 01 	sts	0x0116, r29
EDMA.CH0.TRFCNTH = (len >> 8) & 0xFF;
 260:	c0 93 17 01 	sts	0x0117, r28
EDMA.CH0.ADDRL  =(((uint16_t)data)>>0*8) & 0xFF; // SRCADDRL
 264:	00 93 18 01 	sts	0x0118, r16
EDMA.CH0.ADDRH  =(((uint16_t)data)>>1*8) & 0xFF; // SRCADDRH
 268:	10 93 19 01 	sts	0x0119, r17
EDMA.CH0.DESTADDRL =(((uint16_t)(&DACA.CH0DATA))>>0*8)&0xFF;
 26c:	88 e1       	ldi	r24, 0x18	; 24
 26e:	80 93 1c 01 	sts	0x011C, r24
EDMA.CH0.DESTADDRH =(((uint16_t)(&DACA.CH0DATA))>>1*8)&0xFF;
 272:	83 e0       	ldi	r24, 0x03	; 3
 274:	80 93 1d 01 	sts	0x011D, r24
EDMA.CH0.CTRLA = 0xA5;   // Enable, repeat, 1 byte, single 
 278:	85 ea       	ldi	r24, 0xA5	; 165
 27a:	80 93 10 01 	sts	0x0110, r24
};
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	1f 91       	pop	r17
 284:	0f 91       	pop	r16
 286:	ff 90       	pop	r15
 288:	ef 90       	pop	r14
 28a:	df 90       	pop	r13
 28c:	cf 90       	pop	r12
 28e:	08 95       	ret

00000290 <Config32MHzClock>:



void Config32MHzClock(void)
{
  CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 290:	88 ed       	ldi	r24, 0xD8	; 216
 292:	84 bf       	out	0x34, r24	; 52
  // initialize clock source to be 32MHz internal oscillator (no PLL)
  OSC.CTRL = OSC_RC32MEN_bm; // enable internal 32MHz oscillator
 294:	82 e0       	ldi	r24, 0x02	; 2
 296:	80 93 50 00 	sts	0x0050, r24
  while(!(OSC.STATUS & OSC_RC32MRDY_bm)); // wait for oscillator ready
 29a:	80 91 51 00 	lds	r24, 0x0051
 29e:	81 ff       	sbrs	r24, 1
 2a0:	fc cf       	rjmp	.-8      	; 0x29a <Config32MHzClock+0xa>
  CCP = CCP_IOREG_gc; //Security Signature to modify clock 
 2a2:	88 ed       	ldi	r24, 0xD8	; 216
 2a4:	84 bf       	out	0x34, r24	; 52
  CLK.CTRL = 0x01; //select sysclock 32MHz osc
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	80 93 40 00 	sts	0x0040, r24
 2ac:	08 95       	ret

000002ae <main>:

int main(void)
{
  // int Reading;

  Config32MHzClock();
 2ae:	0e 94 48 01 	call	0x290	; 0x290 <Config32MHzClock>

  CLK.PSCTRL = 0x00; // no division on peripheral clock
 2b2:	10 92 41 00 	sts	0x0041, r1

  // enable clock out on port PC7
  PORTCFG.CLKOUT = (PORTCFG.CLKOUT & ~PORTCFG_CLKOUTSEL_gm) | PORTCFG_CLKOUT_PC7_gc;
 2b6:	80 91 b4 00 	lds	r24, 0x00B4
 2ba:	82 7f       	andi	r24, 0xF2	; 242
 2bc:	81 60       	ori	r24, 0x01	; 1
 2be:	80 93 b4 00 	sts	0x00B4, r24
  // set PC7 as output
  PORTC.DIRSET = PIN7_bm;
 2c2:	80 e8       	ldi	r24, 0x80	; 128
 2c4:	80 93 41 06 	sts	0x0641, r24
  TCC4.CTRLA = 4;
 2c8:	84 e0       	ldi	r24, 0x04	; 4
 2ca:	80 93 00 08 	sts	0x0800, r24

// setup DAC output on PORTA:2 as GND reference
  PORTA.DIRSET = PIN2_bm;
 2ce:	80 93 01 06 	sts	0x0601, r24
  PORTA.OUT &= 0xFB;
 2d2:	80 91 04 06 	lds	r24, 0x0604
 2d6:	8b 7f       	andi	r24, 0xFB	; 251
 2d8:	80 93 04 06 	sts	0x0604, r24
  // ADCA.CH0.CTRL = 0x1;     // single ended
  // ADCA.CH0.MUXCTRL = 0x10; // PORTA:2
  // ADCA.REFCTRL = 0x20;     // reference is PORTA:0
  // ADCA.PRESCALER = 0x5;    // peripheral clk/128

  LoadSineWave(gWaveNumSamp);
 2dc:	80 91 00 20 	lds	r24, 0x2000
 2e0:	90 91 01 20 	lds	r25, 0x2001
 2e4:	0e 94 84 00 	call	0x108	; 0x108 <LoadSineWave>

  // startup in 10kHz
  GenerateArbWave12(data12,gWaveNumSamp*2,10000);
 2e8:	60 91 00 20 	lds	r22, 0x2000
 2ec:	70 91 01 20 	lds	r23, 0x2001
 2f0:	66 0f       	add	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	20 e1       	ldi	r18, 0x10	; 16
 2f6:	37 e2       	ldi	r19, 0x27	; 39
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	50 e0       	ldi	r21, 0x00	; 0
 2fc:	82 e0       	ldi	r24, 0x02	; 2
 2fe:	90 e2       	ldi	r25, 0x20	; 32
 300:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <GenerateArbWave12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 304:	2f ef       	ldi	r18, 0xFF	; 255
 306:	83 ec       	ldi	r24, 0xC3	; 195
 308:	99 e0       	ldi	r25, 0x09	; 9
 30a:	21 50       	subi	r18, 0x01	; 1
 30c:	80 40       	sbci	r24, 0x00	; 0
 30e:	90 40       	sbci	r25, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <main+0x5c>
 312:	00 c0       	rjmp	.+0      	; 0x314 <main+0x66>
 314:	00 00       	nop
 316:	f6 cf       	rjmp	.-20     	; 0x304 <main+0x56>

00000318 <__subsf3>:
 318:	50 58       	subi	r21, 0x80	; 128

0000031a <__addsf3>:
 31a:	bb 27       	eor	r27, r27
 31c:	aa 27       	eor	r26, r26
 31e:	0e d0       	rcall	.+28     	; 0x33c <__addsf3x>
 320:	4d c1       	rjmp	.+666    	; 0x5bc <__fp_round>
 322:	3e d1       	rcall	.+636    	; 0x5a0 <__fp_pscA>
 324:	30 f0       	brcs	.+12     	; 0x332 <__addsf3+0x18>
 326:	43 d1       	rcall	.+646    	; 0x5ae <__fp_pscB>
 328:	20 f0       	brcs	.+8      	; 0x332 <__addsf3+0x18>
 32a:	31 f4       	brne	.+12     	; 0x338 <__addsf3+0x1e>
 32c:	9f 3f       	cpi	r25, 0xFF	; 255
 32e:	11 f4       	brne	.+4      	; 0x334 <__addsf3+0x1a>
 330:	1e f4       	brtc	.+6      	; 0x338 <__addsf3+0x1e>
 332:	33 c1       	rjmp	.+614    	; 0x59a <__fp_nan>
 334:	0e f4       	brtc	.+2      	; 0x338 <__addsf3+0x1e>
 336:	e0 95       	com	r30
 338:	e7 fb       	bst	r30, 7
 33a:	29 c1       	rjmp	.+594    	; 0x58e <__fp_inf>

0000033c <__addsf3x>:
 33c:	e9 2f       	mov	r30, r25
 33e:	4f d1       	rcall	.+670    	; 0x5de <__fp_split3>
 340:	80 f3       	brcs	.-32     	; 0x322 <__addsf3+0x8>
 342:	ba 17       	cp	r27, r26
 344:	62 07       	cpc	r22, r18
 346:	73 07       	cpc	r23, r19
 348:	84 07       	cpc	r24, r20
 34a:	95 07       	cpc	r25, r21
 34c:	18 f0       	brcs	.+6      	; 0x354 <__addsf3x+0x18>
 34e:	71 f4       	brne	.+28     	; 0x36c <__addsf3x+0x30>
 350:	9e f5       	brtc	.+102    	; 0x3b8 <__addsf3x+0x7c>
 352:	67 c1       	rjmp	.+718    	; 0x622 <__fp_zero>
 354:	0e f4       	brtc	.+2      	; 0x358 <__addsf3x+0x1c>
 356:	e0 95       	com	r30
 358:	0b 2e       	mov	r0, r27
 35a:	ba 2f       	mov	r27, r26
 35c:	a0 2d       	mov	r26, r0
 35e:	0b 01       	movw	r0, r22
 360:	b9 01       	movw	r22, r18
 362:	90 01       	movw	r18, r0
 364:	0c 01       	movw	r0, r24
 366:	ca 01       	movw	r24, r20
 368:	a0 01       	movw	r20, r0
 36a:	11 24       	eor	r1, r1
 36c:	ff 27       	eor	r31, r31
 36e:	59 1b       	sub	r21, r25
 370:	99 f0       	breq	.+38     	; 0x398 <__addsf3x+0x5c>
 372:	59 3f       	cpi	r21, 0xF9	; 249
 374:	50 f4       	brcc	.+20     	; 0x38a <__addsf3x+0x4e>
 376:	50 3e       	cpi	r21, 0xE0	; 224
 378:	68 f1       	brcs	.+90     	; 0x3d4 <__addsf3x+0x98>
 37a:	1a 16       	cp	r1, r26
 37c:	f0 40       	sbci	r31, 0x00	; 0
 37e:	a2 2f       	mov	r26, r18
 380:	23 2f       	mov	r18, r19
 382:	34 2f       	mov	r19, r20
 384:	44 27       	eor	r20, r20
 386:	58 5f       	subi	r21, 0xF8	; 248
 388:	f3 cf       	rjmp	.-26     	; 0x370 <__addsf3x+0x34>
 38a:	46 95       	lsr	r20
 38c:	37 95       	ror	r19
 38e:	27 95       	ror	r18
 390:	a7 95       	ror	r26
 392:	f0 40       	sbci	r31, 0x00	; 0
 394:	53 95       	inc	r21
 396:	c9 f7       	brne	.-14     	; 0x38a <__addsf3x+0x4e>
 398:	7e f4       	brtc	.+30     	; 0x3b8 <__addsf3x+0x7c>
 39a:	1f 16       	cp	r1, r31
 39c:	ba 0b       	sbc	r27, r26
 39e:	62 0b       	sbc	r22, r18
 3a0:	73 0b       	sbc	r23, r19
 3a2:	84 0b       	sbc	r24, r20
 3a4:	ba f0       	brmi	.+46     	; 0x3d4 <__addsf3x+0x98>
 3a6:	91 50       	subi	r25, 0x01	; 1
 3a8:	a1 f0       	breq	.+40     	; 0x3d2 <__addsf3x+0x96>
 3aa:	ff 0f       	add	r31, r31
 3ac:	bb 1f       	adc	r27, r27
 3ae:	66 1f       	adc	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	c2 f7       	brpl	.-16     	; 0x3a6 <__addsf3x+0x6a>
 3b6:	0e c0       	rjmp	.+28     	; 0x3d4 <__addsf3x+0x98>
 3b8:	ba 0f       	add	r27, r26
 3ba:	62 1f       	adc	r22, r18
 3bc:	73 1f       	adc	r23, r19
 3be:	84 1f       	adc	r24, r20
 3c0:	48 f4       	brcc	.+18     	; 0x3d4 <__addsf3x+0x98>
 3c2:	87 95       	ror	r24
 3c4:	77 95       	ror	r23
 3c6:	67 95       	ror	r22
 3c8:	b7 95       	ror	r27
 3ca:	f7 95       	ror	r31
 3cc:	9e 3f       	cpi	r25, 0xFE	; 254
 3ce:	08 f0       	brcs	.+2      	; 0x3d2 <__addsf3x+0x96>
 3d0:	b3 cf       	rjmp	.-154    	; 0x338 <__addsf3+0x1e>
 3d2:	93 95       	inc	r25
 3d4:	88 0f       	add	r24, r24
 3d6:	08 f0       	brcs	.+2      	; 0x3da <__addsf3x+0x9e>
 3d8:	99 27       	eor	r25, r25
 3da:	ee 0f       	add	r30, r30
 3dc:	97 95       	ror	r25
 3de:	87 95       	ror	r24
 3e0:	08 95       	ret

000003e2 <__divsf3>:
 3e2:	0c d0       	rcall	.+24     	; 0x3fc <__divsf3x>
 3e4:	eb c0       	rjmp	.+470    	; 0x5bc <__fp_round>
 3e6:	e3 d0       	rcall	.+454    	; 0x5ae <__fp_pscB>
 3e8:	40 f0       	brcs	.+16     	; 0x3fa <__divsf3+0x18>
 3ea:	da d0       	rcall	.+436    	; 0x5a0 <__fp_pscA>
 3ec:	30 f0       	brcs	.+12     	; 0x3fa <__divsf3+0x18>
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <__divsf3+0x16>
 3f0:	5f 3f       	cpi	r21, 0xFF	; 255
 3f2:	19 f0       	breq	.+6      	; 0x3fa <__divsf3+0x18>
 3f4:	cc c0       	rjmp	.+408    	; 0x58e <__fp_inf>
 3f6:	51 11       	cpse	r21, r1
 3f8:	15 c1       	rjmp	.+554    	; 0x624 <__fp_szero>
 3fa:	cf c0       	rjmp	.+414    	; 0x59a <__fp_nan>

000003fc <__divsf3x>:
 3fc:	f0 d0       	rcall	.+480    	; 0x5de <__fp_split3>
 3fe:	98 f3       	brcs	.-26     	; 0x3e6 <__divsf3+0x4>

00000400 <__divsf3_pse>:
 400:	99 23       	and	r25, r25
 402:	c9 f3       	breq	.-14     	; 0x3f6 <__divsf3+0x14>
 404:	55 23       	and	r21, r21
 406:	b1 f3       	breq	.-20     	; 0x3f4 <__divsf3+0x12>
 408:	95 1b       	sub	r25, r21
 40a:	55 0b       	sbc	r21, r21
 40c:	bb 27       	eor	r27, r27
 40e:	aa 27       	eor	r26, r26
 410:	62 17       	cp	r22, r18
 412:	73 07       	cpc	r23, r19
 414:	84 07       	cpc	r24, r20
 416:	38 f0       	brcs	.+14     	; 0x426 <__divsf3_pse+0x26>
 418:	9f 5f       	subi	r25, 0xFF	; 255
 41a:	5f 4f       	sbci	r21, 0xFF	; 255
 41c:	22 0f       	add	r18, r18
 41e:	33 1f       	adc	r19, r19
 420:	44 1f       	adc	r20, r20
 422:	aa 1f       	adc	r26, r26
 424:	a9 f3       	breq	.-22     	; 0x410 <__divsf3_pse+0x10>
 426:	33 d0       	rcall	.+102    	; 0x48e <__divsf3_pse+0x8e>
 428:	0e 2e       	mov	r0, r30
 42a:	3a f0       	brmi	.+14     	; 0x43a <__divsf3_pse+0x3a>
 42c:	e0 e8       	ldi	r30, 0x80	; 128
 42e:	30 d0       	rcall	.+96     	; 0x490 <__divsf3_pse+0x90>
 430:	91 50       	subi	r25, 0x01	; 1
 432:	50 40       	sbci	r21, 0x00	; 0
 434:	e6 95       	lsr	r30
 436:	00 1c       	adc	r0, r0
 438:	ca f7       	brpl	.-14     	; 0x42c <__divsf3_pse+0x2c>
 43a:	29 d0       	rcall	.+82     	; 0x48e <__divsf3_pse+0x8e>
 43c:	fe 2f       	mov	r31, r30
 43e:	27 d0       	rcall	.+78     	; 0x48e <__divsf3_pse+0x8e>
 440:	66 0f       	add	r22, r22
 442:	77 1f       	adc	r23, r23
 444:	88 1f       	adc	r24, r24
 446:	bb 1f       	adc	r27, r27
 448:	26 17       	cp	r18, r22
 44a:	37 07       	cpc	r19, r23
 44c:	48 07       	cpc	r20, r24
 44e:	ab 07       	cpc	r26, r27
 450:	b0 e8       	ldi	r27, 0x80	; 128
 452:	09 f0       	breq	.+2      	; 0x456 <__divsf3_pse+0x56>
 454:	bb 0b       	sbc	r27, r27
 456:	80 2d       	mov	r24, r0
 458:	bf 01       	movw	r22, r30
 45a:	ff 27       	eor	r31, r31
 45c:	93 58       	subi	r25, 0x83	; 131
 45e:	5f 4f       	sbci	r21, 0xFF	; 255
 460:	2a f0       	brmi	.+10     	; 0x46c <__divsf3_pse+0x6c>
 462:	9e 3f       	cpi	r25, 0xFE	; 254
 464:	51 05       	cpc	r21, r1
 466:	68 f0       	brcs	.+26     	; 0x482 <__divsf3_pse+0x82>
 468:	92 c0       	rjmp	.+292    	; 0x58e <__fp_inf>
 46a:	dc c0       	rjmp	.+440    	; 0x624 <__fp_szero>
 46c:	5f 3f       	cpi	r21, 0xFF	; 255
 46e:	ec f3       	brlt	.-6      	; 0x46a <__divsf3_pse+0x6a>
 470:	98 3e       	cpi	r25, 0xE8	; 232
 472:	dc f3       	brlt	.-10     	; 0x46a <__divsf3_pse+0x6a>
 474:	86 95       	lsr	r24
 476:	77 95       	ror	r23
 478:	67 95       	ror	r22
 47a:	b7 95       	ror	r27
 47c:	f7 95       	ror	r31
 47e:	9f 5f       	subi	r25, 0xFF	; 255
 480:	c9 f7       	brne	.-14     	; 0x474 <__divsf3_pse+0x74>
 482:	88 0f       	add	r24, r24
 484:	91 1d       	adc	r25, r1
 486:	96 95       	lsr	r25
 488:	87 95       	ror	r24
 48a:	97 f9       	bld	r25, 7
 48c:	08 95       	ret
 48e:	e1 e0       	ldi	r30, 0x01	; 1
 490:	66 0f       	add	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	88 1f       	adc	r24, r24
 496:	bb 1f       	adc	r27, r27
 498:	62 17       	cp	r22, r18
 49a:	73 07       	cpc	r23, r19
 49c:	84 07       	cpc	r24, r20
 49e:	ba 07       	cpc	r27, r26
 4a0:	20 f0       	brcs	.+8      	; 0x4aa <__divsf3_pse+0xaa>
 4a2:	62 1b       	sub	r22, r18
 4a4:	73 0b       	sbc	r23, r19
 4a6:	84 0b       	sbc	r24, r20
 4a8:	ba 0b       	sbc	r27, r26
 4aa:	ee 1f       	adc	r30, r30
 4ac:	88 f7       	brcc	.-30     	; 0x490 <__divsf3_pse+0x90>
 4ae:	e0 95       	com	r30
 4b0:	08 95       	ret

000004b2 <__fixsfsi>:
 4b2:	04 d0       	rcall	.+8      	; 0x4bc <__fixunssfsi>
 4b4:	68 94       	set
 4b6:	b1 11       	cpse	r27, r1
 4b8:	b5 c0       	rjmp	.+362    	; 0x624 <__fp_szero>
 4ba:	08 95       	ret

000004bc <__fixunssfsi>:
 4bc:	98 d0       	rcall	.+304    	; 0x5ee <__fp_splitA>
 4be:	88 f0       	brcs	.+34     	; 0x4e2 <__fixunssfsi+0x26>
 4c0:	9f 57       	subi	r25, 0x7F	; 127
 4c2:	90 f0       	brcs	.+36     	; 0x4e8 <__fixunssfsi+0x2c>
 4c4:	b9 2f       	mov	r27, r25
 4c6:	99 27       	eor	r25, r25
 4c8:	b7 51       	subi	r27, 0x17	; 23
 4ca:	a0 f0       	brcs	.+40     	; 0x4f4 <__fixunssfsi+0x38>
 4cc:	d1 f0       	breq	.+52     	; 0x502 <__fixunssfsi+0x46>
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	88 1f       	adc	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	1a f0       	brmi	.+6      	; 0x4de <__fixunssfsi+0x22>
 4d8:	ba 95       	dec	r27
 4da:	c9 f7       	brne	.-14     	; 0x4ce <__fixunssfsi+0x12>
 4dc:	12 c0       	rjmp	.+36     	; 0x502 <__fixunssfsi+0x46>
 4de:	b1 30       	cpi	r27, 0x01	; 1
 4e0:	81 f0       	breq	.+32     	; 0x502 <__fixunssfsi+0x46>
 4e2:	9f d0       	rcall	.+318    	; 0x622 <__fp_zero>
 4e4:	b1 e0       	ldi	r27, 0x01	; 1
 4e6:	08 95       	ret
 4e8:	9c c0       	rjmp	.+312    	; 0x622 <__fp_zero>
 4ea:	67 2f       	mov	r22, r23
 4ec:	78 2f       	mov	r23, r24
 4ee:	88 27       	eor	r24, r24
 4f0:	b8 5f       	subi	r27, 0xF8	; 248
 4f2:	39 f0       	breq	.+14     	; 0x502 <__fixunssfsi+0x46>
 4f4:	b9 3f       	cpi	r27, 0xF9	; 249
 4f6:	cc f3       	brlt	.-14     	; 0x4ea <__fixunssfsi+0x2e>
 4f8:	86 95       	lsr	r24
 4fa:	77 95       	ror	r23
 4fc:	67 95       	ror	r22
 4fe:	b3 95       	inc	r27
 500:	d9 f7       	brne	.-10     	; 0x4f8 <__fixunssfsi+0x3c>
 502:	3e f4       	brtc	.+14     	; 0x512 <__fixunssfsi+0x56>
 504:	90 95       	com	r25
 506:	80 95       	com	r24
 508:	70 95       	com	r23
 50a:	61 95       	neg	r22
 50c:	7f 4f       	sbci	r23, 0xFF	; 255
 50e:	8f 4f       	sbci	r24, 0xFF	; 255
 510:	9f 4f       	sbci	r25, 0xFF	; 255
 512:	08 95       	ret

00000514 <__floatunsisf>:
 514:	e8 94       	clt
 516:	09 c0       	rjmp	.+18     	; 0x52a <__floatsisf+0x12>

00000518 <__floatsisf>:
 518:	97 fb       	bst	r25, 7
 51a:	3e f4       	brtc	.+14     	; 0x52a <__floatsisf+0x12>
 51c:	90 95       	com	r25
 51e:	80 95       	com	r24
 520:	70 95       	com	r23
 522:	61 95       	neg	r22
 524:	7f 4f       	sbci	r23, 0xFF	; 255
 526:	8f 4f       	sbci	r24, 0xFF	; 255
 528:	9f 4f       	sbci	r25, 0xFF	; 255
 52a:	99 23       	and	r25, r25
 52c:	a9 f0       	breq	.+42     	; 0x558 <__floatsisf+0x40>
 52e:	f9 2f       	mov	r31, r25
 530:	96 e9       	ldi	r25, 0x96	; 150
 532:	bb 27       	eor	r27, r27
 534:	93 95       	inc	r25
 536:	f6 95       	lsr	r31
 538:	87 95       	ror	r24
 53a:	77 95       	ror	r23
 53c:	67 95       	ror	r22
 53e:	b7 95       	ror	r27
 540:	f1 11       	cpse	r31, r1
 542:	f8 cf       	rjmp	.-16     	; 0x534 <__floatsisf+0x1c>
 544:	fa f4       	brpl	.+62     	; 0x584 <__floatsisf+0x6c>
 546:	bb 0f       	add	r27, r27
 548:	11 f4       	brne	.+4      	; 0x54e <__floatsisf+0x36>
 54a:	60 ff       	sbrs	r22, 0
 54c:	1b c0       	rjmp	.+54     	; 0x584 <__floatsisf+0x6c>
 54e:	6f 5f       	subi	r22, 0xFF	; 255
 550:	7f 4f       	sbci	r23, 0xFF	; 255
 552:	8f 4f       	sbci	r24, 0xFF	; 255
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	16 c0       	rjmp	.+44     	; 0x584 <__floatsisf+0x6c>
 558:	88 23       	and	r24, r24
 55a:	11 f0       	breq	.+4      	; 0x560 <__floatsisf+0x48>
 55c:	96 e9       	ldi	r25, 0x96	; 150
 55e:	11 c0       	rjmp	.+34     	; 0x582 <__floatsisf+0x6a>
 560:	77 23       	and	r23, r23
 562:	21 f0       	breq	.+8      	; 0x56c <__floatsisf+0x54>
 564:	9e e8       	ldi	r25, 0x8E	; 142
 566:	87 2f       	mov	r24, r23
 568:	76 2f       	mov	r23, r22
 56a:	05 c0       	rjmp	.+10     	; 0x576 <__floatsisf+0x5e>
 56c:	66 23       	and	r22, r22
 56e:	71 f0       	breq	.+28     	; 0x58c <__floatsisf+0x74>
 570:	96 e8       	ldi	r25, 0x86	; 134
 572:	86 2f       	mov	r24, r22
 574:	70 e0       	ldi	r23, 0x00	; 0
 576:	60 e0       	ldi	r22, 0x00	; 0
 578:	2a f0       	brmi	.+10     	; 0x584 <__floatsisf+0x6c>
 57a:	9a 95       	dec	r25
 57c:	66 0f       	add	r22, r22
 57e:	77 1f       	adc	r23, r23
 580:	88 1f       	adc	r24, r24
 582:	da f7       	brpl	.-10     	; 0x57a <__floatsisf+0x62>
 584:	88 0f       	add	r24, r24
 586:	96 95       	lsr	r25
 588:	87 95       	ror	r24
 58a:	97 f9       	bld	r25, 7
 58c:	08 95       	ret

0000058e <__fp_inf>:
 58e:	97 f9       	bld	r25, 7
 590:	9f 67       	ori	r25, 0x7F	; 127
 592:	80 e8       	ldi	r24, 0x80	; 128
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	08 95       	ret

0000059a <__fp_nan>:
 59a:	9f ef       	ldi	r25, 0xFF	; 255
 59c:	80 ec       	ldi	r24, 0xC0	; 192
 59e:	08 95       	ret

000005a0 <__fp_pscA>:
 5a0:	00 24       	eor	r0, r0
 5a2:	0a 94       	dec	r0
 5a4:	16 16       	cp	r1, r22
 5a6:	17 06       	cpc	r1, r23
 5a8:	18 06       	cpc	r1, r24
 5aa:	09 06       	cpc	r0, r25
 5ac:	08 95       	ret

000005ae <__fp_pscB>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	12 16       	cp	r1, r18
 5b4:	13 06       	cpc	r1, r19
 5b6:	14 06       	cpc	r1, r20
 5b8:	05 06       	cpc	r0, r21
 5ba:	08 95       	ret

000005bc <__fp_round>:
 5bc:	09 2e       	mov	r0, r25
 5be:	03 94       	inc	r0
 5c0:	00 0c       	add	r0, r0
 5c2:	11 f4       	brne	.+4      	; 0x5c8 <__fp_round+0xc>
 5c4:	88 23       	and	r24, r24
 5c6:	52 f0       	brmi	.+20     	; 0x5dc <__fp_round+0x20>
 5c8:	bb 0f       	add	r27, r27
 5ca:	40 f4       	brcc	.+16     	; 0x5dc <__fp_round+0x20>
 5cc:	bf 2b       	or	r27, r31
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <__fp_round+0x18>
 5d0:	60 ff       	sbrs	r22, 0
 5d2:	04 c0       	rjmp	.+8      	; 0x5dc <__fp_round+0x20>
 5d4:	6f 5f       	subi	r22, 0xFF	; 255
 5d6:	7f 4f       	sbci	r23, 0xFF	; 255
 5d8:	8f 4f       	sbci	r24, 0xFF	; 255
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	08 95       	ret

000005de <__fp_split3>:
 5de:	57 fd       	sbrc	r21, 7
 5e0:	90 58       	subi	r25, 0x80	; 128
 5e2:	44 0f       	add	r20, r20
 5e4:	55 1f       	adc	r21, r21
 5e6:	59 f0       	breq	.+22     	; 0x5fe <__fp_splitA+0x10>
 5e8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ea:	71 f0       	breq	.+28     	; 0x608 <__fp_splitA+0x1a>
 5ec:	47 95       	ror	r20

000005ee <__fp_splitA>:
 5ee:	88 0f       	add	r24, r24
 5f0:	97 fb       	bst	r25, 7
 5f2:	99 1f       	adc	r25, r25
 5f4:	61 f0       	breq	.+24     	; 0x60e <__fp_splitA+0x20>
 5f6:	9f 3f       	cpi	r25, 0xFF	; 255
 5f8:	79 f0       	breq	.+30     	; 0x618 <__fp_splitA+0x2a>
 5fa:	87 95       	ror	r24
 5fc:	08 95       	ret
 5fe:	12 16       	cp	r1, r18
 600:	13 06       	cpc	r1, r19
 602:	14 06       	cpc	r1, r20
 604:	55 1f       	adc	r21, r21
 606:	f2 cf       	rjmp	.-28     	; 0x5ec <__fp_split3+0xe>
 608:	46 95       	lsr	r20
 60a:	f1 df       	rcall	.-30     	; 0x5ee <__fp_splitA>
 60c:	08 c0       	rjmp	.+16     	; 0x61e <__fp_splitA+0x30>
 60e:	16 16       	cp	r1, r22
 610:	17 06       	cpc	r1, r23
 612:	18 06       	cpc	r1, r24
 614:	99 1f       	adc	r25, r25
 616:	f1 cf       	rjmp	.-30     	; 0x5fa <__fp_splitA+0xc>
 618:	86 95       	lsr	r24
 61a:	71 05       	cpc	r23, r1
 61c:	61 05       	cpc	r22, r1
 61e:	08 94       	sec
 620:	08 95       	ret

00000622 <__fp_zero>:
 622:	e8 94       	clt

00000624 <__fp_szero>:
 624:	bb 27       	eor	r27, r27
 626:	66 27       	eor	r22, r22
 628:	77 27       	eor	r23, r23
 62a:	cb 01       	movw	r24, r22
 62c:	97 f9       	bld	r25, 7
 62e:	08 95       	ret

00000630 <__mulsf3>:
 630:	0b d0       	rcall	.+22     	; 0x648 <__mulsf3x>
 632:	c4 cf       	rjmp	.-120    	; 0x5bc <__fp_round>
 634:	b5 df       	rcall	.-150    	; 0x5a0 <__fp_pscA>
 636:	28 f0       	brcs	.+10     	; 0x642 <__mulsf3+0x12>
 638:	ba df       	rcall	.-140    	; 0x5ae <__fp_pscB>
 63a:	18 f0       	brcs	.+6      	; 0x642 <__mulsf3+0x12>
 63c:	95 23       	and	r25, r21
 63e:	09 f0       	breq	.+2      	; 0x642 <__mulsf3+0x12>
 640:	a6 cf       	rjmp	.-180    	; 0x58e <__fp_inf>
 642:	ab cf       	rjmp	.-170    	; 0x59a <__fp_nan>
 644:	11 24       	eor	r1, r1
 646:	ee cf       	rjmp	.-36     	; 0x624 <__fp_szero>

00000648 <__mulsf3x>:
 648:	ca df       	rcall	.-108    	; 0x5de <__fp_split3>
 64a:	a0 f3       	brcs	.-24     	; 0x634 <__mulsf3+0x4>

0000064c <__mulsf3_pse>:
 64c:	95 9f       	mul	r25, r21
 64e:	d1 f3       	breq	.-12     	; 0x644 <__mulsf3+0x14>
 650:	95 0f       	add	r25, r21
 652:	50 e0       	ldi	r21, 0x00	; 0
 654:	55 1f       	adc	r21, r21
 656:	62 9f       	mul	r22, r18
 658:	f0 01       	movw	r30, r0
 65a:	72 9f       	mul	r23, r18
 65c:	bb 27       	eor	r27, r27
 65e:	f0 0d       	add	r31, r0
 660:	b1 1d       	adc	r27, r1
 662:	63 9f       	mul	r22, r19
 664:	aa 27       	eor	r26, r26
 666:	f0 0d       	add	r31, r0
 668:	b1 1d       	adc	r27, r1
 66a:	aa 1f       	adc	r26, r26
 66c:	64 9f       	mul	r22, r20
 66e:	66 27       	eor	r22, r22
 670:	b0 0d       	add	r27, r0
 672:	a1 1d       	adc	r26, r1
 674:	66 1f       	adc	r22, r22
 676:	82 9f       	mul	r24, r18
 678:	22 27       	eor	r18, r18
 67a:	b0 0d       	add	r27, r0
 67c:	a1 1d       	adc	r26, r1
 67e:	62 1f       	adc	r22, r18
 680:	73 9f       	mul	r23, r19
 682:	b0 0d       	add	r27, r0
 684:	a1 1d       	adc	r26, r1
 686:	62 1f       	adc	r22, r18
 688:	83 9f       	mul	r24, r19
 68a:	a0 0d       	add	r26, r0
 68c:	61 1d       	adc	r22, r1
 68e:	22 1f       	adc	r18, r18
 690:	74 9f       	mul	r23, r20
 692:	33 27       	eor	r19, r19
 694:	a0 0d       	add	r26, r0
 696:	61 1d       	adc	r22, r1
 698:	23 1f       	adc	r18, r19
 69a:	84 9f       	mul	r24, r20
 69c:	60 0d       	add	r22, r0
 69e:	21 1d       	adc	r18, r1
 6a0:	82 2f       	mov	r24, r18
 6a2:	76 2f       	mov	r23, r22
 6a4:	6a 2f       	mov	r22, r26
 6a6:	11 24       	eor	r1, r1
 6a8:	9f 57       	subi	r25, 0x7F	; 127
 6aa:	50 40       	sbci	r21, 0x00	; 0
 6ac:	8a f0       	brmi	.+34     	; 0x6d0 <__mulsf3_pse+0x84>
 6ae:	e1 f0       	breq	.+56     	; 0x6e8 <__mulsf3_pse+0x9c>
 6b0:	88 23       	and	r24, r24
 6b2:	4a f0       	brmi	.+18     	; 0x6c6 <__mulsf3_pse+0x7a>
 6b4:	ee 0f       	add	r30, r30
 6b6:	ff 1f       	adc	r31, r31
 6b8:	bb 1f       	adc	r27, r27
 6ba:	66 1f       	adc	r22, r22
 6bc:	77 1f       	adc	r23, r23
 6be:	88 1f       	adc	r24, r24
 6c0:	91 50       	subi	r25, 0x01	; 1
 6c2:	50 40       	sbci	r21, 0x00	; 0
 6c4:	a9 f7       	brne	.-22     	; 0x6b0 <__mulsf3_pse+0x64>
 6c6:	9e 3f       	cpi	r25, 0xFE	; 254
 6c8:	51 05       	cpc	r21, r1
 6ca:	70 f0       	brcs	.+28     	; 0x6e8 <__mulsf3_pse+0x9c>
 6cc:	60 cf       	rjmp	.-320    	; 0x58e <__fp_inf>
 6ce:	aa cf       	rjmp	.-172    	; 0x624 <__fp_szero>
 6d0:	5f 3f       	cpi	r21, 0xFF	; 255
 6d2:	ec f3       	brlt	.-6      	; 0x6ce <__mulsf3_pse+0x82>
 6d4:	98 3e       	cpi	r25, 0xE8	; 232
 6d6:	dc f3       	brlt	.-10     	; 0x6ce <__mulsf3_pse+0x82>
 6d8:	86 95       	lsr	r24
 6da:	77 95       	ror	r23
 6dc:	67 95       	ror	r22
 6de:	b7 95       	ror	r27
 6e0:	f7 95       	ror	r31
 6e2:	e7 95       	ror	r30
 6e4:	9f 5f       	subi	r25, 0xFF	; 255
 6e6:	c1 f7       	brne	.-16     	; 0x6d8 <__mulsf3_pse+0x8c>
 6e8:	fe 2b       	or	r31, r30
 6ea:	88 0f       	add	r24, r24
 6ec:	91 1d       	adc	r25, r1
 6ee:	96 95       	lsr	r25
 6f0:	87 95       	ror	r24
 6f2:	97 f9       	bld	r25, 7
 6f4:	08 95       	ret

000006f6 <sin>:
 6f6:	9f 93       	push	r25
 6f8:	05 d0       	rcall	.+10     	; 0x704 <__fp_rempio2>
 6fa:	0f 90       	pop	r0
 6fc:	07 fc       	sbrc	r0, 7
 6fe:	ee 5f       	subi	r30, 0xFE	; 254
 700:	28 c0       	rjmp	.+80     	; 0x752 <__fp_sinus>
 702:	4b cf       	rjmp	.-362    	; 0x59a <__fp_nan>

00000704 <__fp_rempio2>:
 704:	74 df       	rcall	.-280    	; 0x5ee <__fp_splitA>
 706:	e8 f3       	brcs	.-6      	; 0x702 <sin+0xc>
 708:	e8 94       	clt
 70a:	e0 e0       	ldi	r30, 0x00	; 0
 70c:	bb 27       	eor	r27, r27
 70e:	9f 57       	subi	r25, 0x7F	; 127
 710:	f0 f0       	brcs	.+60     	; 0x74e <__fp_rempio2+0x4a>
 712:	2a ed       	ldi	r18, 0xDA	; 218
 714:	3f e0       	ldi	r19, 0x0F	; 15
 716:	49 ec       	ldi	r20, 0xC9	; 201
 718:	06 c0       	rjmp	.+12     	; 0x726 <__fp_rempio2+0x22>
 71a:	ee 0f       	add	r30, r30
 71c:	bb 0f       	add	r27, r27
 71e:	66 1f       	adc	r22, r22
 720:	77 1f       	adc	r23, r23
 722:	88 1f       	adc	r24, r24
 724:	28 f0       	brcs	.+10     	; 0x730 <__fp_rempio2+0x2c>
 726:	b2 3a       	cpi	r27, 0xA2	; 162
 728:	62 07       	cpc	r22, r18
 72a:	73 07       	cpc	r23, r19
 72c:	84 07       	cpc	r24, r20
 72e:	28 f0       	brcs	.+10     	; 0x73a <__fp_rempio2+0x36>
 730:	b2 5a       	subi	r27, 0xA2	; 162
 732:	62 0b       	sbc	r22, r18
 734:	73 0b       	sbc	r23, r19
 736:	84 0b       	sbc	r24, r20
 738:	e3 95       	inc	r30
 73a:	9a 95       	dec	r25
 73c:	72 f7       	brpl	.-36     	; 0x71a <__fp_rempio2+0x16>
 73e:	80 38       	cpi	r24, 0x80	; 128
 740:	30 f4       	brcc	.+12     	; 0x74e <__fp_rempio2+0x4a>
 742:	9a 95       	dec	r25
 744:	bb 0f       	add	r27, r27
 746:	66 1f       	adc	r22, r22
 748:	77 1f       	adc	r23, r23
 74a:	88 1f       	adc	r24, r24
 74c:	d2 f7       	brpl	.-12     	; 0x742 <__fp_rempio2+0x3e>
 74e:	90 48       	sbci	r25, 0x80	; 128
 750:	13 c0       	rjmp	.+38     	; 0x778 <__fp_mpack_finite>

00000752 <__fp_sinus>:
 752:	ef 93       	push	r30
 754:	e0 ff       	sbrs	r30, 0
 756:	06 c0       	rjmp	.+12     	; 0x764 <__fp_sinus+0x12>
 758:	a2 ea       	ldi	r26, 0xA2	; 162
 75a:	2a ed       	ldi	r18, 0xDA	; 218
 75c:	3f e0       	ldi	r19, 0x0F	; 15
 75e:	49 ec       	ldi	r20, 0xC9	; 201
 760:	5f eb       	ldi	r21, 0xBF	; 191
 762:	ec dd       	rcall	.-1064   	; 0x33c <__addsf3x>
 764:	2b df       	rcall	.-426    	; 0x5bc <__fp_round>
 766:	0f 90       	pop	r0
 768:	03 94       	inc	r0
 76a:	01 fc       	sbrc	r0, 1
 76c:	90 58       	subi	r25, 0x80	; 128
 76e:	ec ea       	ldi	r30, 0xAC	; 172
 770:	f0 e0       	ldi	r31, 0x00	; 0
 772:	0e c0       	rjmp	.+28     	; 0x790 <__fp_powsodd>

00000774 <__fp_mpack>:
 774:	9f 3f       	cpi	r25, 0xFF	; 255
 776:	31 f0       	breq	.+12     	; 0x784 <__fp_mpack_finite+0xc>

00000778 <__fp_mpack_finite>:
 778:	91 50       	subi	r25, 0x01	; 1
 77a:	20 f4       	brcc	.+8      	; 0x784 <__fp_mpack_finite+0xc>
 77c:	87 95       	ror	r24
 77e:	77 95       	ror	r23
 780:	67 95       	ror	r22
 782:	b7 95       	ror	r27
 784:	88 0f       	add	r24, r24
 786:	91 1d       	adc	r25, r1
 788:	96 95       	lsr	r25
 78a:	87 95       	ror	r24
 78c:	97 f9       	bld	r25, 7
 78e:	08 95       	ret

00000790 <__fp_powsodd>:
 790:	9f 93       	push	r25
 792:	8f 93       	push	r24
 794:	7f 93       	push	r23
 796:	6f 93       	push	r22
 798:	ff 93       	push	r31
 79a:	ef 93       	push	r30
 79c:	9b 01       	movw	r18, r22
 79e:	ac 01       	movw	r20, r24
 7a0:	47 df       	rcall	.-370    	; 0x630 <__mulsf3>
 7a2:	ef 91       	pop	r30
 7a4:	ff 91       	pop	r31
 7a6:	05 d0       	rcall	.+10     	; 0x7b2 <__fp_powser>
 7a8:	2f 91       	pop	r18
 7aa:	3f 91       	pop	r19
 7ac:	4f 91       	pop	r20
 7ae:	5f 91       	pop	r21
 7b0:	3f cf       	rjmp	.-386    	; 0x630 <__mulsf3>

000007b2 <__fp_powser>:
 7b2:	df 93       	push	r29
 7b4:	cf 93       	push	r28
 7b6:	1f 93       	push	r17
 7b8:	0f 93       	push	r16
 7ba:	ff 92       	push	r15
 7bc:	ef 92       	push	r14
 7be:	df 92       	push	r13
 7c0:	7b 01       	movw	r14, r22
 7c2:	8c 01       	movw	r16, r24
 7c4:	68 94       	set
 7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <__fp_powser+0x20>
 7c8:	da 2e       	mov	r13, r26
 7ca:	ef 01       	movw	r28, r30
 7cc:	3d df       	rcall	.-390    	; 0x648 <__mulsf3x>
 7ce:	fe 01       	movw	r30, r28
 7d0:	e8 94       	clt
 7d2:	a5 91       	lpm	r26, Z+
 7d4:	25 91       	lpm	r18, Z+
 7d6:	35 91       	lpm	r19, Z+
 7d8:	45 91       	lpm	r20, Z+
 7da:	55 91       	lpm	r21, Z+
 7dc:	ae f3       	brts	.-22     	; 0x7c8 <__fp_powser+0x16>
 7de:	ef 01       	movw	r28, r30
 7e0:	ad dd       	rcall	.-1190   	; 0x33c <__addsf3x>
 7e2:	fe 01       	movw	r30, r28
 7e4:	97 01       	movw	r18, r14
 7e6:	a8 01       	movw	r20, r16
 7e8:	da 94       	dec	r13
 7ea:	79 f7       	brne	.-34     	; 0x7ca <__fp_powser+0x18>
 7ec:	df 90       	pop	r13
 7ee:	ef 90       	pop	r14
 7f0:	ff 90       	pop	r15
 7f2:	0f 91       	pop	r16
 7f4:	1f 91       	pop	r17
 7f6:	cf 91       	pop	r28
 7f8:	df 91       	pop	r29
 7fa:	08 95       	ret

000007fc <__udivmodsi4>:
 7fc:	a1 e2       	ldi	r26, 0x21	; 33
 7fe:	1a 2e       	mov	r1, r26
 800:	aa 1b       	sub	r26, r26
 802:	bb 1b       	sub	r27, r27
 804:	fd 01       	movw	r30, r26
 806:	0d c0       	rjmp	.+26     	; 0x822 <__udivmodsi4_ep>

00000808 <__udivmodsi4_loop>:
 808:	aa 1f       	adc	r26, r26
 80a:	bb 1f       	adc	r27, r27
 80c:	ee 1f       	adc	r30, r30
 80e:	ff 1f       	adc	r31, r31
 810:	a2 17       	cp	r26, r18
 812:	b3 07       	cpc	r27, r19
 814:	e4 07       	cpc	r30, r20
 816:	f5 07       	cpc	r31, r21
 818:	20 f0       	brcs	.+8      	; 0x822 <__udivmodsi4_ep>
 81a:	a2 1b       	sub	r26, r18
 81c:	b3 0b       	sbc	r27, r19
 81e:	e4 0b       	sbc	r30, r20
 820:	f5 0b       	sbc	r31, r21

00000822 <__udivmodsi4_ep>:
 822:	66 1f       	adc	r22, r22
 824:	77 1f       	adc	r23, r23
 826:	88 1f       	adc	r24, r24
 828:	99 1f       	adc	r25, r25
 82a:	1a 94       	dec	r1
 82c:	69 f7       	brne	.-38     	; 0x808 <__udivmodsi4_loop>
 82e:	60 95       	com	r22
 830:	70 95       	com	r23
 832:	80 95       	com	r24
 834:	90 95       	com	r25
 836:	9b 01       	movw	r18, r22
 838:	ac 01       	movw	r20, r24
 83a:	bd 01       	movw	r22, r26
 83c:	cf 01       	movw	r24, r30
 83e:	08 95       	ret

00000840 <_exit>:
 840:	f8 94       	cli

00000842 <__stop_program>:
 842:	ff cf       	rjmp	.-2      	; 0x842 <__stop_program>
